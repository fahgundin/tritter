generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearchPostgres"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model users {
  userid        Int             @id(map: "User_pkey") @default(autoincrement())
  username      String          @unique(map: "User_username_key") @db.VarChar(15)
  email         String          @unique(map: "User_email_key") @db.VarChar(255)
  password      String          @db.VarChar(255)
  biography     String?         @db.VarChar(255)
  user_icon     String?         @db.VarChar(255)
  followers     String[]        @db.VarChar(255)
  follows       String[]        @db.VarChar(255)
  posts         posts[]
  likedPosts    Int[]
  notifications notifications[]
}

model posts {
  postID     Int       @id @default(autoincrement())
  content    String    @db.VarChar(455)
  userid     Int
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  usersLiked String[]
  users      users     @relation(fields: [userid], references: [userid], onDelete: NoAction, onUpdate: NoAction)
  quote      Int?
}

model notifications {
  notificationID Int      @id @default(autoincrement())
  content        String   @db.VarChar(455)
  userid         Int
  created_at     DateTime @default(now()) @db.Timestamptz(6)
  read           Boolean  @default(false)
  users          users    @relation(fields: [userid], references: [userid], onDelete: NoAction, onUpdate: NoAction)
}
